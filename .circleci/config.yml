# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: node:10.13-alpine
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
      # for alpine
      - run: apk add --no-cache ca-certificates

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: yarn install
      - run: yarn run build

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: .
          paths:
            - .

  image_push:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.16.10
      - run:
          name: aws login
          command: $(aws ecr get-login --region ap-northeast-1 --no-include-email)
      - run:
          name: build image
          command: docker image build -t ${CIRCLE_PROJECT_REPONAME}:latest -f nuxt.Dockerfile .
      - run:
          name: docker tag
          # command: docker tag ${CIRCLE_PROJECT_REPONAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM}
          command: |
            docker tag ${CIRCLE_PROJECT_REPONAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:${CIRCLE_BUILD_NUM}
            docker tag ${CIRCLE_PROJECT_REPONAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:latest
      - run:
          name: ecr push
          # command: docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM}
          command: |
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:${CIRCLE_BUILD_NUM}
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:latest


  image_push_and_deploy:
    docker:
      - image: ubuntu:18.04
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run: apt-get update && apt-get install -y ca-certificates
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y curl python-pip
            pip install awscli==1.16.10
            curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
            chmod +x /usr/local/bin/ecs-cli
            curl -fsSL get.docker.com -o get-docker.sh
            sh get-docker.sh
      - run:
          name: aws login
          command: $(aws ecr get-login --region ap-northeast-1 --no-include-email)
      - run:
          name: build image
          command: docker image build -t ${CIRCLE_PROJECT_REPONAME}:latest -f nuxt.Dockerfile .
      - run:
          name: docker tag
          # command: docker tag ${CIRCLE_PROJECT_REPONAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM}
          command: |
            docker tag ${CIRCLE_PROJECT_REPONAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:${CIRCLE_BUILD_NUM}
            docker tag ${CIRCLE_PROJECT_REPONAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:latest
      - run:
          name: ecr push
          # command: docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM}
          command: |
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:${CIRCLE_BUILD_NUM}
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nuxt:latest
      - run:
          name: deploy
          command: make deploy_ci
workflows:
  version: 2
  build_lint:
    jobs:
      - build
      - image_push:
          requires:
            - build
          filters:
            branches:
              only: master